@charset "utf-8";
@import "compass/css3/";

//連続処理
// @for $cnt from 1 through 8{
//   li:nth-child(#{$cnt}){
//     filter: opacity(1);
//     transform: translateY(0%);
//     transition: all $cnt * .4s;
//   }
// }

//ホバー処理
.hvrop {
  transition: .3s;
  @media screen and (min-width: 897px) {
    &:hover {
      opacity: 0.7;
    }
  }
}
.underline {
  position: relative;
  &::after {
      content: "";
      background: #dadada;
      width: 100%;
      height: 1px;
      position: absolute;
      bottom: -4px;
      left: 0;
      transform: scale(0, 1);
      transition: transform .3s;
      transform-origin: right top;
  }
  @include bkp(pc){
      &:hover {
          &::after {
              transform-origin: left top;
              transform: scale(1, 1);
          }
      }
  }
}
.hoverScale {
  .thumb {
      overflow: hidden;
      transition: transform .4s cubic-bezier(.4,.1,.3,1);
      .scaleImg {
          transition: transform .4s cubic-bezier(.4,.1,.3,1);
          img {
              backface-visibility: hidden;
          }
      }
  }
  @include bkp(pc){
      &:hover {
          .thumb {
              transform: scale(.95);
              .scaleImg {
                  transform: scale(1.15);
              }
          }
      }
  }
}

//スクロール処理
.svg_anim {
  svg {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    transition: 1s;
    width: 100%;
    height: auto;
  }
  &.on {
    svg {
      stroke-dashoffset: 2000;
    }
  }
}

.fade_y {
  transform: translateY(3%);
  opacity: 0;
  transition: .7s;
  &.on {
    opacity: 1;
    transform: translateY(0%);
  }
}

.scr_cvr {
  overflow: hidden;
  position: relative;
  display: block;
  opacity: 0;
  transition: .5s;
  &::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    right: 0;
    top: 0;
    z-index: 1;
    background-color: #000;
    transition: all .6s cubic-bezier(0.5, 0, 0.3, 1);
    transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
  }
  &.on {
    opacity: 1;
    &::before {
      right: -100%;
      transition-delay: .3s;
    }
  }
}

// 滑らかに表示
span.smoothText {
	overflow: hidden;
	display: block;
  /* アニメーションで傾斜がついている文字列を水平に戻す*/
  span.anim{
    transition: .65s ease-in-out;
    opacity: 0;
    transform: translate3d(0,2.5vw,0) skewY(2deg) rotateY(-10deg);
    transform-origin: center;
    display: block;
    filter: blur(5px) ;
    mix-blend-mode: color-burn;
    // &.on{
    //   mix-blend-mode: initial;
    //   transform: translate3d(0,0,0) skewY(0);
    //   filter: blur(0) ;
    //     opacity: 1;
    // }
  }
}


.eachTextAnime span{opacity: 0;}
.eachTextAnime.on span{ animation:text_anime_on .3s ease-out forwards; }
@keyframes text_anime_on {
	0% {opacity:0;}
	50% {opacity:1;}
	90% {opacity:1;}
	100% {opacity:0;}
}

@keyframes openingBg {
	0% {transform: translateX(0);}
	70% {transform: translateX(0);}
	100% {
    transform: translateX(101%);
    visibility: hidden;
  }
}
@keyframes openingContent {
	0% {opacity: 0;filter: blur(10px);}
  30%{opacity: 1; filter: blur(0);}
	70% {opacity: 1;}
	100% {
    opacity: 0;
    visibility: hidden;
  }
}



body{
  &.loaded{
    .top__mv__scroll.eachTextAnime span{ animation:text_anime_on 1.5s ease-out infinite forwards; }
    .loadfade{
      animation:openingBg 1.7s ease forwards;
      &_wrap {
        animation:openingContent 1.7s ease forwards;
      }
    }
    .loadfadebg{
      animation:openingBg 1.7s .06s ease forwards;
    }
  }
}
//連続処理
.fuwafuwa{
  transform-origin: center;
  animation: fuwafuwa 20s linear infinite forwards;
  @include bkp(sp){
    animation: fuwafuwa 10s linear infinite forwards;
  }
}
@keyframes fuwafuwa {
  0%{
    // transform: scale(1);
    opacity: 1;
  }
  25%{
    // transform: translate(0,0) scale(1.05);
    opacity: .5;
  }
  50%{
    opacity: 1;
    // transform:  scale(1);
  }
  75%{
    // transform:  scale(1.05);
    opacity: .5;
  }
  100%{
    opacity: 1;
    // transform:  scale(1);
  }
}
@keyframes pushShadow {
  0%{
    filter: drop-shadow(6px 10px 2px rgba(0 , 0 , 0 , 0.2));
  }
  25%{
    filter: drop-shadow(3px 5px 1px rgba(0 , 0 , 0 , 0.3));
  }
  50%{
    filter: drop-shadow(6px 10px 2px rgba(0 , 0 , 0 , 0.2));
  }
  75%{
    filter: drop-shadow(3px 5px 1px rgba(0 , 0 , 0 , 0.3));
  }
  100%{
    filter: drop-shadow(6px 10px 2px rgba(0 , 0 , 0 , 0.2));
  }
}
@keyframes kemuri {
  0%{
    opacity: .4;
  }
  25%{
    opacity: .2;
  }
  50%{
    opacity: .4;
  }
  75%{
    opacity: .2;
  }
  100%{
    opacity: .4;
  }
}

@keyframes impTxt {
  0%{
    opacity: 0;
    // color: $color01;
    transform: translate(-150% , 30%) scale(0.9) rotateX(20deg);
    filter: blur(10px);
  }
  30%{
    // color: $color01;
  }
  40%{
    // color: white;
  }
  50%{
    opacity: 0.5;
    transform: translate(-50%, -8%) scale(1.2);
    // color: black;
  }
  75%{
    filter: blur(3px);
    // color: $color01;
  }
  100%{
    opacity: 1;
    // color: white;
    transform: translate(0 , 0) scale(1) rotateX(0);
    filter: blur(0);
  }
}
@keyframes impTxtColor {
  0%{
    color: white;
  }
  55%{
    color: white;
  }
  75%{
    color: $color01;
  }
  100%{
    color: white;
  }
}

@keyframes pathmove{
	0%{
		height:0;
		top:20px;
		opacity: 0;
	}
	30%{
		height:30px;
		opacity: 1;
	}
	100%{
		height:0;
		top:60px;
		opacity: 0;
	}
}
@keyframes circleScale{
	0%{
    transform:scale(0) translate(-50%,-50%);
    opacity: 0;
	}
	30%{
    transform:scale(1.5) translate(-50%,-50%);
    opacity: .9;
	}
	45%{
    transform:scale(1.5) translate(-50%,-50%);
    opacity: 0;
	}
	100%{
    transform:scale(0) translate(-50%,-50%);
    opacity: 0;
	}
}

.fade_x_left {
  transform: translateX(-50px);
  opacity: 0;
  transition: .7s;
  &.on {
    opacity: 1;
    transform: translateX(0%);
  }
}

.fade_x_right {
  transform: translateX(50px);
  opacity: 0;
  transition: .7s;
  &.on {
    opacity: 1;
    transform: translateX(0%);
  }
}

.scale_y_img{
  transform: scaleY(0);
  transform-origin: top;
  transition: .7s .3s;
  &.on{
    transform: scaleY(1);
  }
}
.scale_x_img{
  transform: scaleX(0);
  transform-origin: left;
  transition: .7s .1s;
  &.on{
    transform: scaleX(1);
  }
}

/*--- 線から塗り（共通設定） ---*/

.btn05{
    /*線の基点とするためrelativeを指定*/
    position: relative;
    /*ボタンの形状*/
    display: inline-block;
    color: #333; 
    padding: 10px 20px;
    background:#eee;
    text-decoration: none;
    outline: none;
    /*アニメーションの指定*/
    transition: all .3s;
    transition-delay: .7s;/*0.7秒遅れてアニメーション*/
}

/*hoverした際の、ボタンの背景とテキスト色の変更*/
.btn05:hover{
  background:#333;
  color: #fff;
}

/*線の設定*/
.btn05 span{
    display: block;
}

/*横線の設定*/
.btn05::before,
.btn05::after{
    content:"";
    /*絶対配置で線の位置を決める*/   
    position: absolute;
    /*線の形状*/   
    width: 0;
    height: 1px;
    background: #333;
    /*アニメーションの指定*/
    transition: all 0.2s linear;
}

/*縦線の設定*/
.btn05 span::before,
.btn05 span::after{
    content:"";
    /*絶対配置で線の位置を決める*/   
    position: absolute;
    /*線の形状*/
    width:1px;
    height:0;
    background: #333;
    /*アニメーションの指定*/
    transition: all 0.2s linear;
}

/*hoverした際、線が縦横100%伸びる*/
.btn05:hover::before,
.btn05:hover::after{
    width: 100%;
}
.btn05:hover span::before,
.btn05:hover span::after{
    height: 100%;
}

/*== 左上と右下から枠線が伸びて塗りに */

/*右下から右上へ伸びる横線*/
.bordercircle3::after{
    right:0;
    bottom: 0;
    transition-duration: 0.4s;
}

/*右下から右上へ伸びる縦線*/
.bordercircle3 span::after{
    right:0;
    bottom: 0;
    transition-duration: 0.4s;
}

/*左上から右上へ伸びる横線*/
.bordercircle3::before{
    left: 0;
    top: 0;
    transition-duration: 0.4s;
}

/*左上から左下へ伸びる横線*/
.bordercircle3 span::before{
    left: 0;
    top: 0;
    transition-duration: 0.4s;
}